@*@model IEnumerable<LibraryManagementSystem.Models.Book>*@
@model PaginatedList<LibraryManagementSystem.Models.Book>


@{
    ViewData["Title"] = "Books";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</p>
@*<form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name of book/author: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-dark" /> |
                <a asp-action="Index">Back to Full List</a>
            </p>

            <p>
                Search by:
                @Html.CheckBox("searchByTitle") <label>Title</label>
                @Html.CheckBox("searchByAuthor") <label>Author</label>
            </p>
            <p>
                @Html.TextBox("searchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" />
            </p>
        </div>
    </form>*@

<form asp-action="Index" method="get" class="form-inline">
    <div class="form-group">
        <p>
            Find by name of book/author:
            @Html.CheckBox("searchByTitle", new { @class = "form-check-input" })
            <label class="form-check-label" for="searchByTitle">Title</label>
            @Html.CheckBox("searchByAuthor", new { @class = "form-check-input ml-2" })
            <label class="form-check-label" for="searchByAuthor">Author</label>
        </p>
        <div class="form-group mb-2">
            @Html.TextBox("searchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search", @value = ViewBag.CurrentFilter })
        </div>
        <div class="form-group">
            <input type="submit" value="Search" class="btn btn-primary mr-2" />
            <a asp-action="Index" class="btn btn-secondary">Back to Full List</a>
        </div>
    </div>
</form>




<table class="table table-striped table-hover mx-auto">
    <thead class="thead-dark">
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["TitleSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Title</a>
                @*@Html.DisplayNameFor(model => model.Title)*@
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["YearSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Release year</a>

                @*@Html.DisplayNameFor(model => model.ReleaseYear)*@
            </th>
            <th>
                Availability
            </th>
            <th>
                Genre
            </th>
            <th>
                Author
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReleaseYear)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsAvailable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Genre.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.FullName)
                </td>
                <td class="btn-group">
                    <a asp-action="Edit" asp-route-id="@item.ID" class="btn btn-sm btn-primary mr-1">Edit</a>
                    <a asp-action="Details" asp-route-id="@item.ID" class="btn btn-sm btn-secondary mx-1">Details</a>
                    <form asp-action="Delete" asp-route-id="@item.ID" method="post" onsubmit="return confirm('Are you sure you want to delete this item?');">
                        <button type="submit" class="btn btn-sm btn-danger mx-1">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>


@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>

@if (ViewBag.Message != null)
{
    <div class="alert alert-warning">@ViewBag.Message</div>
}
